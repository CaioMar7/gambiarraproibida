    async index(request, response) {
        const { title, tags, locked } = request.query

        let posts 

            if(tags) {
                if(locked) {
                    if(Number(locked) === 1 ) {
                        const filterTags = tags.split(",").map(tag => tag.trim())
                        posts = await knex("tags")
                        .select([
                            "posts.id",
                            "posts.title",
                            "posts.description",
                            "posts.locked",
                            "posts.user_id",
                        ])
                        .where("posts.locked", 1)
                        .whereIn("name", filterTags)
                        .whereLike("posts.title", `%${title}%`)
                        .innerJoin("posts", "posts.id", "tags.post_id")
                        .orderBy("posts.title")
                    } else {
                        const filterTags = tags.split(",").map(tag => tag.trim())
                        posts = await knex("tags")
                        .select([
                            "posts.id",
                            "posts.title",
                            "posts.description",
                            "posts.locked",
                            "posts.user_id",
                        ])
                        .where("posts.locked", 0)
                        .whereIn("name", filterTags)
                        .whereLike("posts.title", `%${title}%`)
                        .innerJoin("posts", "posts.id", "tags.post_id")
                        .orderBy("posts.title")
                    }
                } else {
                    const filterTags = tags.split(",").map(tag => tag.trim())
                    posts = await knex("tags")
                    .select([
                        "posts.id",
                        "posts.title",
                        "posts.description",
                        "posts.locked",
                        "posts.user_id",
                    ])
                    .whereIn("name", filterTags)
                    .whereLike("posts.title", `%${title}%`)
                    .innerJoin("posts", "posts.id", "tags.post_id")
                    .orderBy("posts.title")
                }

            } else {
                if(locked) {
                    if(Number(locked) === 1 ) {
                        posts = await knex("posts").orderBy("created_at", "desc")
                        .whereLike("title", `%${title}%`)
                        .where("locked", 1)
                    } else {
                        posts = await knex("posts").orderBy("created_at", "desc")
                        .whereLike("title", `%${title}%`)
                        .where("locked", 0)
                    }
                } else {
                    posts = await knex("posts").orderBy("created_at", "desc")
                    .whereLike("title", `%${title}%`)
                }
            }

        const taglist = await knex("tags")
        const postWithTags = posts.map(post => {
            const postTags = taglist.filter(tag => tag.post_id === post.id)
            return {
                ... post,
                tags:postTags
            }
        })
        return response.json(postWithTags)
    }
}
